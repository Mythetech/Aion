@if (!Active && !ActiveFunc(ActiveId))
{
    <MudTooltip Text="@Title">
        <MudNavLink IconColor="@Color.Surface" Icon="@Icon" OnClick="@(async () => await ContextPanelItemClicked.InvokeAsync(this))" />
    </MudTooltip>
}
else
{
    <MudNavLink Class="context-item-active" IconColor="@Color.Primary" Icon="@Icon" OnClick="@(async () => await ContextPanelItemClicked.InvokeAsync(this))"/>
}

@code {
    [Parameter]
    public RenderFragment PanelContent { get; set; } = default!;

    [Parameter]
    public string Icon { get; set; } = default!;

    [Parameter]
    public bool Active { get; set; } = false;

    [Parameter]
    public string Title { get; set; } = "";

    [Parameter]
    public EventCallback<ContextPanelItem> ContextPanelItemClicked { get; set; } = default!;

    [Parameter]
    public Guid Id { get; set; } = Guid.NewGuid();

    [Parameter]
    public Guid? ActiveId { get; set; }
    
    private bool ActiveFunc(Guid? id)
    {
        if (id == null) return false;

        return id.Equals(Id);
    }

    public void Toggle()
    {
        Active = !Active;
        StateHasChanged();
    }
}
@using Aion.Core.Queries
@using Aion.Components.Shared
@using Aion.Components.Theme

<MudPaper Class="pa-4" Elevation="0">
    <MudStack Class="mr-4">
        @if (Query?.Result != null)
        {
            
                    <KeyValueListItem Key="Executed At" Value="@Query.Result.ExecutedAt.ToLocalTime().ToString("g")" />
             
                    <KeyValueListItem Key="Duration" Value="@($"{(Query.ExecutionDuration?.TotalMilliseconds.ToString("N0") ?? "0")} ms")" />
              
                    <KeyValueListItem Key="Rows" Value="@Query.Result.RowCount.ToString()" />
        
                    <KeyValueListItem Key="Columns" Value="@Query.Result.Columns.Count.ToString()" />
                
                @if (Query.DatabaseName != null)
                {
                        <KeyValueListItem Key="Database" Value="@Query.DatabaseName" />
                }

                @if (Query.Transaction != null)
                {
                        <MudStack>
                            <KeyValueListItem Key="Transaction ID" Value="@Query.Transaction.Value.Id" />
                            <KeyValueListItem Key="Transaction Status" Value="@Query.Transaction.Value.Status.ToString()" />
                            <KeyValueListItem Key="Transaction Start" Value="@Query.Transaction.Value.StartTime.ToLocalTime().ToString("g")" />
                        </MudStack>
                }

                @if (Query.EstimatedPlan != null || Query.ActualPlan != null)
                {
                        <MudStack>
                            @if (Query.EstimatedPlan != null)
                            {
                                <MudChip T="string" Color="Color.Info" Size="Size.Small">Estimated Plan Available</MudChip>
                            }
                            @if (Query.ActualPlan != null)
                            {
                                <MudChip T="string" Color="Color.Success" Size="Size.Small">Actual Plan Available</MudChip>
                            }
                        </MudStack>
                }

                @if (!string.IsNullOrEmpty(Query.Result.Error))
                {
                    <MudItem xs="12">
                        <MudAlert Severity="Severity.Error" Class="mt-2">@Query.Result.Error</MudAlert>
                    </MudItem>
                }
        }
        else if (Query?.IsExecuting ?? false)
        {
            <MudStack AlignItems="AlignItems.Center" Justify="Justify.Center">
                <MudProgressCircular Color="Color.Primary" Indeterminate="true" />
                <MudText>Executing Query...</MudText>
                <QueryTimer StartTime="@Query.ExecutionStartTime" EndTime="@Query.ExecutionEndTime" />
            </MudStack>
        }
        else
        {
            <MudStack AlignItems="AlignItems.Center" Justify="Justify.Center">
                <MudText>No query results available</MudText>
            </MudStack>
        }
    </MudStack>
</MudPaper>

@code {
    [Parameter]
    public QueryModel? Query { get; set; }
} 